name: Rust

on:
  push:
    branches:
      - main
  pull_request: {}

jobs:
  create-oci-archive:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v1
    - uses: Swatinem/rust-cache@v1
    - uses: actions-rs/cargo@v1
      with:
        command: run
        args: --bin=ocipkg -- pack ocipkg/ out
    - name: Testing podman can load the generated container
      run: podman load < out.tar

  load-oci-archive:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v1
    - uses: Swatinem/rust-cache@v1
    - name: Create test oci-archive using podman
      run: |
        podman pull alpine
        podman save -o oci-alpine.tar --format oci-archive alpine
    - uses: actions-rs/cargo@v1
      with:
        command: run
        args: --bin=ocipkg -- load oci-alpine.tar
    - name: Show alpine version
      run: cat $HOME/.local/share/ocipkg/docker.io/library/alpine/__latest/etc/alpine-release

  get-container:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v1
    - uses: Swatinem/rust-cache@v1
    - name: Setup registry
      run: |
        ./test/fixture.sh
    - uses: actions-rs/cargo@v1
      with:
        command: run
        args: --bin=ocipkg -- get localhost:5000/test_repo:tag1
    - name: Show alpine version
      run: cat $HOME/.local/share/ocipkg/localhost/test_repo/__tag1/etc/alpine-release
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

  cargo-ocipkg-build:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v1
    - uses: Swatinem/rust-cache@v1
    - uses: actions-rs/cargo@v1
      with:
        command: build
    - name: Build container with cargo-ocipkg
      run: ./target/debug/cargo-ocipkg build -p ocipkg-lib-example
    - name: Testing podman can load the generated container
      run: podman load < ./target/debug/ocipkg-lib-example.tar
